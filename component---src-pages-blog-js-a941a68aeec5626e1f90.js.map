{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/container.js","webpack:///./src/components/navigation.js","webpack:///./src/components/layout.js","webpack:///./src/components/article-preview.js"],"names":["BlogIndex","render","get","this","posts","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","location","props","style","background","className","map","_ref","node","key","slug","_components_article_preview__WEBPACK_IMPORTED_MODULE_7__","article","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","container","children","react_default","maxWidth","margin","navigation","role","styles","navigationItem","gatsby_browser_entry","to","Template","_this$props","__PREFIX_PATHS__","gatsby__WEBPACK_IMPORTED_MODULE_1__","_article_preview_module_css__WEBPACK_IMPORTED_MODULE_3__","_article_preview_module_css__WEBPACK_IMPORTED_MODULE_3___default","preview","previewTitle","title","publishDate","dangerouslySetInnerHTML","__html","description","childMarkdownRemark","html"],"mappings":"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","file":"component---src-pages-blog-js-a941a68aeec5626e1f90.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\nimport styles from './blog.module.css'\nimport Layout from \"../components/layout\"\nimport ArticlePreview from '../components/article-preview'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const posts = get(this, 'props.data.allContentfulBlogPost.edges')\n\n    return (\n      <Layout location={this.props.location} >\n        <div style={{ background: '#fff' }}>\n          <div className=\"wrapper\">\n            <h2 className=\"section-headline\">Seneste blogindl√¶g</h2>\n            <ul className=\"article-list\">\n              {posts.map(({ node }) => {\n                return (\n                  <li key={node.slug}>\n                    <ArticlePreview article={node} />\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query BlogIndexQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allContentfulBlogPost(sort: { fields: [publishDate], order: DESC }) {\n      edges {\n        node {\n          title\n          slug\n          publishDate(formatString: \"MMMM Do, YYYY\")\n          description {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\nexport default ({ children }) => (\n  <div style={{ maxWidth: 1180, margin: '0 auto' }}>{children}</div>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styles from './navigation.module.css'\n\nexport default () => (\n  <nav role=\"navigation\">\n    <ul className={styles.navigation}>\n      <li className={styles.navigationItem}>\n        <Link to=\"/\">Forside</Link>\n      </li>\n       <li className={styles.navigationItem}>\n        <Link to=\"/blog/\">Blog</Link>\n      </li>\n      <li className={styles.navigationItem}>\n        <Link to=\"/trolde/\">Trolde</Link>\n      </li> \n    </ul>\n  </nav>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport base from './base.css'\nimport Container from './container'\nimport Navigation from './navigation'\n\nclass Template extends React.Component {\n  render() {\n    const { location, children } = this.props\n    let header\n\n    let rootPath = `/`\n    if (typeof __PREFIX_PATHS__ !== `undefined` && __PREFIX_PATHS__) {\n      rootPath = __PATH_PREFIX__ + `/`\n    }\n\n    return (\n      <Container>\n        <Navigation />\n        {children}\n      </Container>\n    )\n  }\n}\n\nexport default Template\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport styles from './article-preview.module.css'\n\nexport default ({ article }) => (\n  <div className={styles.preview}>\n    <h3 className={styles.previewTitle}>\n      <Link to={`/blog/${article.slug}`}>{article.title}</Link>\n    </h3>\n    <small>{article.publishDate}</small>\n    <p\n      dangerouslySetInnerHTML={{\n        __html: article.description.childMarkdownRemark.html,\n      }}\n    />\n\n  </div>\n)\n"],"sourceRoot":""}