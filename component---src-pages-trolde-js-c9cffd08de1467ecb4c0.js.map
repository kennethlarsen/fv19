{"version":3,"sources":["webpack:///./src/pages/trolde.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/container.js","webpack:///./src/components/navigation.js","webpack:///./src/components/layout.js","webpack:///./src/components/article-preview.js"],"names":["TroldeIndex","render","trolls","get","this","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","location","props","className","style","background","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","class","map","_ref","node","username","key","slug","href","hasBotNetName","highTweets","fewPersonal","identicalTweets","quoteTweets","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","container","children","react_default","maxWidth","margin","navigation","role","styles","navigationItem","gatsby_browser_entry","Template","_this$props","__PREFIX_PATHS__","gatsby__WEBPACK_IMPORTED_MODULE_1__","_article_preview_module_css__WEBPACK_IMPORTED_MODULE_3__","_article_preview_module_css__WEBPACK_IMPORTED_MODULE_3___default","article","preview","previewTitle","title","publishDate","dangerouslySetInnerHTML","__html","description","childMarkdownRemark","html"],"mappings":"iOAQMA,oGACJC,OAAA,WACE,IAAMC,EAASC,IAAIC,KAAM,uCAEzB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUL,KAAKM,MAAMD,UAC3BJ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBAAiBC,MAAO,CAAEC,WAAY,SACpDR,EAAAC,EAAAC,cAAA,kCADD,iEAIEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAE,mDAAR,kCACAV,EAAAC,EAAAC,cAAA,WALF,uJAOEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIS,MAAM,eACPd,EAAOe,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACb,OACEd,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACbN,EAAAC,EAAAC,cAAA,cAAMY,EAAKC,UACXf,EAAAC,EAAAC,cAAA,MAAIc,IAAKF,EAAKG,MAAd,gBACejB,EAAAC,EAAAC,cAAA,KAAGgB,KAAI,uBAAyBJ,EAAKC,UAArC,uBAAyED,EAAKC,WAE7Ff,EAAAC,EAAAC,cAAA,MAAIc,IAAKF,EAAKG,MAAd,sCACsCH,EAAKK,cAAgB,QAAU,UAErEnB,EAAAC,EAAAC,cAAA,MAAIc,IAAKF,EAAKG,MAAd,6CAC6CH,EAAKM,WAAa,QAAU,UAGzEpB,EAAAC,EAAAC,cAAA,MAAIc,IAAKF,EAAKG,MAAd,sCACsCH,EAAKO,YAAc,QAAU,UAGnErB,EAAAC,EAAAC,cAAA,MAAIc,IAAKF,EAAKG,MAAd,qDACqDH,EAAKQ,gBAAkB,QAAU,UAGtFtB,EAAAC,EAAAC,cAAA,MAAIc,IAAKF,EAAKG,MAAd,wDACwDH,EAAKS,YAAc,QAAU,oBAtC7EC,IAAMC,YAkDjB9B,YAER,IAAM+B,EAAS,+CC5DtB,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,IAAAM,EAAAN,EAAAE,EAAAG,GAAAL,EAAAO,EAAAC,EAAA,sBAAAF,EAAAjC,IAAA2B,EAAA,KAa2BJ,IAAMa,cAAc,IA0CvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,0BC1DtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAnC,GAAkB,IAAfT,EAAeS,EAAfT,SACpB6C,EAAgBC,UAAOC,4BAA4B/C,EAASgD,UAClE,OAAKH,EAIEzB,IAAMtB,cAAcmD,IAApBC,OAAAC,OAAA,CACLnD,WACA6C,iBACGA,EAAcO,OANV,MAUXR,EAAiBS,UAAY,CAC3BrD,SAAUkC,IAAUoB,MAAM,CACxBN,SAAUd,IAAUE,OAAOC,aAC1BA,YAGUO,2FCvBAW,UAAA,SAAA9C,GAAA,IAAG+C,EAAH/C,EAAG+C,SAAH,OACbC,EAAA5D,EAAAC,cAAA,OAAKK,MAAO,CAAEuD,SAAU,KAAMC,OAAQ,WAAaH,uBCCtCI,EAAA,kBACbH,EAAA5D,EAAAC,cAAA,OAAK+D,KAAK,cACRJ,EAAA5D,EAAAC,cAAA,MAAII,UAAW4D,IAAOF,YACpBH,EAAA5D,EAAAC,cAAA,MAAII,UAAW4D,IAAOC,gBACpBN,EAAA5D,EAAAC,cAACkE,EAAA,EAAD,CAAM1D,GAAG,KAAT,YAEDmD,EAAA5D,EAAAC,cAAA,MAAII,UAAW4D,IAAOC,gBACrBN,EAAA5D,EAAAC,cAACkE,EAAA,EAAD,CAAM1D,GAAG,UAAT,SAEFmD,EAAA5D,EAAAC,cAAA,MAAII,UAAW4D,IAAOC,gBACpBN,EAAA5D,EAAAC,cAACkE,EAAA,EAAD,CAAM1D,GAAG,YAAT,cCRF2D,4FACJzE,OAAA,WAAS,IAAA0E,EACwBvE,KAAKM,MAAlBuD,GADXU,EACClE,SADDkE,EACWV,UAQlB,MAJI,oBAAOW,kBAAoCA,kBACnB,IAI1BV,EAAA5D,EAAAC,cAACyD,EAAD,KACEE,EAAA5D,EAAAC,cAAC8D,EAAD,MACCJ,OAbcpC,IAAMC,WAmBd4C,wCCzBf,IAAA1C,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAA6C,EAAA5C,EAAA,KAAA6C,GAAA7C,EAAA,KAAAA,EAAA,MAAA8C,EAAA9C,EAAAE,EAAA2C,GAMerC,EAAA,WAAAvB,GAAA,IAAG8D,EAAH9D,EAAG8D,QAAH,OACb9C,EAAA5B,EAAAC,cAAA,OAAKI,UAAW4D,IAAOU,SACrB/C,EAAA5B,EAAAC,cAAA,MAAII,UAAW4D,IAAOW,cACpBhD,EAAA5B,EAAAC,cAACsE,EAAA,EAAD,CAAM9D,GAAE,SAAWiE,EAAQ1D,MAAS0D,EAAQG,QAE9CjD,EAAA5B,EAAAC,cAAA,aAAQyE,EAAQI,aAChBlD,EAAA5B,EAAAC,cAAA,KACE8E,wBAAyB,CACvBC,OAAQN,EAAQO,YAAYC,oBAAoBC","file":"component---src-pages-trolde-js-c9cffd08de1467ecb4c0.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\nimport styles from './blog.module.css'\nimport Layout from \"../components/layout\"\nimport ArticlePreview from '../components/article-preview'\n\nclass TroldeIndex extends React.Component {\n  render() {\n    const trolls = get(this, 'props.data.allContentfulTrold.edges')\n\n    return (\n      <Layout location={this.props.location} >\n        <div className=\"main-container\" style={{ background: '#fff' }}>\n         <h1>Vores troldekartotek</h1>\n\n          Vigtigt: Læs vores artikel om hvordan vi definerer en \"trold\": \n          <Link to={`/blog/Velkommen%20til%20trollefanger-projektet.`}>Hvordan definerer vi en trold?</Link>\n          <br/>\n          Følgende liste er profiler, vi stærkt mistænker for at være oprettet gennem et botnet og/eller har som formål at skabe splid i den offentlige debat.\n          <hr/>\n          <ul class=\"trolls-list\">\n            {trolls.map(({ node }) => {\n              return (\n                <div className=\"trolls\">\n                  <h2>@{node.username}</h2>\n                  <li key={node.slug}>\n                    Twitter URL: <a href={`https://twitter.com/${node.username}`}>{`https://twitter.com/${node.username}`}</a>\n                  </li>\n                  <li key={node.slug}>\n                    Har profilen et botnet-brugernavn? {node.hasBotNetName ? ' ✅ Ja' : ' ⛔ Nej'}\n                  </li>\n                  <li key={node.slug}>\n                    Har profilen et højt antal tweet pr. dag? {node.highTweets ? ' ✅ Ja' : ' ⛔ Nej'}\n                  </li>\n\n                  <li key={node.slug}>\n                    Har profilen få personlige tweets? {node.fewPersonal ? ' ✅ Ja' : ' ⛔ Nej'}\n                  </li>\n\n                  <li key={node.slug}>\n                    Har profilen identiske tweets med andre profiler? {node.identicalTweets ? ' ✅ Ja' : ' ⛔ Nej'}\n                  </li>\n\n                  <li key={node.slug}>\n                    Har profilen delt mange citater fra nyhedshistorier? {node.quoteTweets ? ' ✅ Ja' : ' ⛔ Nej'}\n                  </li>\n                </div>\n              )\n            })}\n          </ul>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default TroldeIndex\n\nexport const pageQuery = graphql`\n  query TroldeIndexQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n\n    allContentfulTrold(filter: {}) {\n      edges {\n        node {\n          username\n          hasBotNetName\n          highTweets\n          fewPersonal\n          identicalTweets\n          quoteTweets\n        }\n      }\n    }\n   \n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\nexport default ({ children }) => (\n  <div style={{ maxWidth: 1180, margin: '0 auto' }}>{children}</div>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styles from './navigation.module.css'\n\nexport default () => (\n  <nav role=\"navigation\">\n    <ul className={styles.navigation}>\n      <li className={styles.navigationItem}>\n        <Link to=\"/\">Forside</Link>\n      </li>\n       <li className={styles.navigationItem}>\n        <Link to=\"/blog/\">Blog</Link>\n      </li>\n      <li className={styles.navigationItem}>\n        <Link to=\"/trolde/\">Trolde</Link>\n      </li> \n    </ul>\n  </nav>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport base from './base.css'\nimport Container from './container'\nimport Navigation from './navigation'\n\nclass Template extends React.Component {\n  render() {\n    const { location, children } = this.props\n    let header\n\n    let rootPath = `/`\n    if (typeof __PREFIX_PATHS__ !== `undefined` && __PREFIX_PATHS__) {\n      rootPath = __PATH_PREFIX__ + `/`\n    }\n\n    return (\n      <Container>\n        <Navigation />\n        {children}\n      </Container>\n    )\n  }\n}\n\nexport default Template\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport styles from './article-preview.module.css'\n\nexport default ({ article }) => (\n  <div className={styles.preview}>\n    <h3 className={styles.previewTitle}>\n      <Link to={`/blog/${article.slug}`}>{article.title}</Link>\n    </h3>\n    <small>{article.publishDate}</small>\n    <p\n      dangerouslySetInnerHTML={{\n        __html: article.description.childMarkdownRemark.html,\n      }}\n    />\n\n  </div>\n)\n"],"sourceRoot":""}